;; Auto-generated. Do not edit!


(when (boundp 'hexapodservice::hexapodserviceResult)
  (if (not (find-package "HEXAPODSERVICE"))
    (make-package "HEXAPODSERVICE"))
  (shadow 'hexapodserviceResult (find-package "HEXAPODSERVICE")))
(unless (find-package "HEXAPODSERVICE::HEXAPODSERVICERESULT")
  (make-package "HEXAPODSERVICE::HEXAPODSERVICERESULT"))

(in-package "ROS")
;;//! \htmlinclude hexapodserviceResult.msg.html


(defclass hexapodservice::hexapodserviceResult
  :super ros::object
  :slots (_status _freespace _motionActive _result ))

(defmethod hexapodservice::hexapodserviceResult
  (:init
   (&key
    ((:status __status) 0)
    ((:freespace __freespace) 0)
    ((:motionActive __motionActive) nil)
    ((:result __result) "")
    )
   (send-super :init)
   (setq _status (round __status))
   (setq _freespace (round __freespace))
   (setq _motionActive __motionActive)
   (setq _result (string __result))
   self)
  (:status
   (&optional __status)
   (if __status (setq _status __status)) _status)
  (:freespace
   (&optional __freespace)
   (if __freespace (setq _freespace __freespace)) _freespace)
  (:motionActive
   (&optional __motionActive)
   (if __motionActive (setq _motionActive __motionActive)) _motionActive)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; int32 _status
    4
    ;; int32 _freespace
    4
    ;; bool _motionActive
    1
    ;; string _result
    4 (length _result)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _status
       (write-long _status s)
     ;; int32 _freespace
       (write-long _freespace s)
     ;; bool _motionActive
       (if _motionActive (write-byte -1 s) (write-byte 0 s))
     ;; string _result
       (write-long (length _result) s) (princ _result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _status
     (setq _status (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _freespace
     (setq _freespace (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; bool _motionActive
     (setq _motionActive (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; string _result
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _result (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get hexapodservice::hexapodserviceResult :md5sum-) "84ae386391a6712ba3f1d0cdfd23bad0")
(setf (get hexapodservice::hexapodserviceResult :datatype-) "hexapodservice/hexapodserviceResult")
(setf (get hexapodservice::hexapodserviceResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 status
int32 freespace
bool motionActive
string result

")



(provide :hexapodservice/hexapodserviceResult "84ae386391a6712ba3f1d0cdfd23bad0")


